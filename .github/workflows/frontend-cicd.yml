name: Frontend CI/CD

on:
  push:
    branches: [master]
    paths: ['front-end/**']
  pull_request:
    branches: [master]
    paths: ['front-end/**']

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    env:
      working-directory: front-end
    steps:
      - uses: actions/checkout@v3

      - name: Set environment
        uses: actions/github-script@v6
        with:
          script: |
            let deployStage = '';
            let reactAppAbs = '';
            let cloudfront = '';

            switch (context.eventName) {
              case 'push':
                deployStage = 'prod';
                reactAppAbs = '${{ secrets.REACT_APP_ABS_PROD }}';
                cloudfront = '${{ secrets.CF_PROD }}';
                break;
              case 'pull_request':
                deployStage = 'dev';
                reactAppAbs = '${{ secrets.REACT_APP_ABS_DEV }}';
                cloudfront = '${{ secrets.CF_DEV }}';
                break;
            }

            core.exportVariable('DEPLOY_STAGE', deployStage);
            core.exportVariable('REACT_APP_ABS', reactAppAbs);
            core.exportVariable('CF', cloudfront);

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        working-directory: ${{ env.working-directory }}
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-fe-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-fe

      - name: Install dependencies
        working-directory: ${{ env.working-directory }}
        run: yarn install --frozen-lockfile

      - name: Build
        working-directory: ${{ env.working-directory }}
        env:
          REACT_APP_GC_ID: ${{ secrets.REACT_APP_GC_ID }}
        run: yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload static resources to s3
        working-directory: ${{ env.working-directory }}
        run: aws s3 sync build s3://${{ secrets.ABS_S3 }}/${{ env.DEPLOY_STAGE }} --delete

      - name: Cloudfront cache invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CF }} --paths "/*"
